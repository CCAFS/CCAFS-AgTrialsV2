<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbTrialinfodata', 'doctrine');

/**
 * BaseTbTrialinfodata
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_trialinfodata
 * @property integer $id_trialinfo
 * @property integer $trnfdtreplication
 * @property integer $id_variety
 * @property integer $id_variablesmeasured
 * @property string $trnfdtvalue
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property TbTrialinfo $TbTrialinfo
 * @property TbVariablesmeasured $TbVariablesmeasured
 * @property TbVariety $TbVariety
 * 
 * @method integer             getIdTrialinfodata()      Returns the current record's "id_trialinfodata" value
 * @method integer             getIdTrialinfo()          Returns the current record's "id_trialinfo" value
 * @method integer             getTrnfdtreplication()    Returns the current record's "trnfdtreplication" value
 * @method integer             getIdVariety()            Returns the current record's "id_variety" value
 * @method integer             getIdVariablesmeasured()  Returns the current record's "id_variablesmeasured" value
 * @method string              getTrnfdtvalue()          Returns the current record's "trnfdtvalue" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method integer             getIdUser()               Returns the current record's "id_user" value
 * @method integer             getIdUserUpdate()         Returns the current record's "id_user_update" value
 * @method TbTrialinfo         getTbTrialinfo()          Returns the current record's "TbTrialinfo" value
 * @method TbVariablesmeasured getTbVariablesmeasured()  Returns the current record's "TbVariablesmeasured" value
 * @method TbVariety           getTbVariety()            Returns the current record's "TbVariety" value
 * @method TbTrialinfodata     setIdTrialinfodata()      Sets the current record's "id_trialinfodata" value
 * @method TbTrialinfodata     setIdTrialinfo()          Sets the current record's "id_trialinfo" value
 * @method TbTrialinfodata     setTrnfdtreplication()    Sets the current record's "trnfdtreplication" value
 * @method TbTrialinfodata     setIdVariety()            Sets the current record's "id_variety" value
 * @method TbTrialinfodata     setIdVariablesmeasured()  Sets the current record's "id_variablesmeasured" value
 * @method TbTrialinfodata     setTrnfdtvalue()          Sets the current record's "trnfdtvalue" value
 * @method TbTrialinfodata     setCreatedAt()            Sets the current record's "created_at" value
 * @method TbTrialinfodata     setUpdatedAt()            Sets the current record's "updated_at" value
 * @method TbTrialinfodata     setIdUser()               Sets the current record's "id_user" value
 * @method TbTrialinfodata     setIdUserUpdate()         Sets the current record's "id_user_update" value
 * @method TbTrialinfodata     setTbTrialinfo()          Sets the current record's "TbTrialinfo" value
 * @method TbTrialinfodata     setTbVariablesmeasured()  Sets the current record's "TbVariablesmeasured" value
 * @method TbTrialinfodata     setTbVariety()            Sets the current record's "TbVariety" value
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - herlin25@gmail.com - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbTrialinfodata extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_trialinfodata');
        $this->hasColumn('id_trialinfodata', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_trialinfodata_id_trialinfodata',
             'length' => 8,
             ));
        $this->hasColumn('id_trialinfo', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('trnfdtreplication', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_variety', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_variablesmeasured', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('trnfdtvalue', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbTrialinfo', array(
             'local' => 'id_trialinfo',
             'foreign' => 'id_trialinfo'));

        $this->hasOne('TbVariablesmeasured', array(
             'local' => 'id_variablesmeasured',
             'foreign' => 'id_variablesmeasured'));

        $this->hasOne('TbVariety', array(
             'local' => 'id_variety',
             'foreign' => 'id_variety'));
    }
}