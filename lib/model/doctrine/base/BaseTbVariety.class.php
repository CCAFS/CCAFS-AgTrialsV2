<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbVariety', 'doctrine');

/**
 * BaseTbVariety
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_variety
 * @property integer $id_crop
 * @property string $vrtorigin
 * @property string $vrtname
 * @property string $vrtsynonymous
 * @property string $vrtdescription
 * @property string $id_genebank
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property TbCrop $TbCrop
 * @property Doctrine_Collection $TbTrialinfodata
 * 
 * @method integer             getIdVariety()       Returns the current record's "id_variety" value
 * @method integer             getIdCrop()          Returns the current record's "id_crop" value
 * @method string              getVrtorigin()       Returns the current record's "vrtorigin" value
 * @method string              getVrtname()         Returns the current record's "vrtname" value
 * @method string              getVrtsynonymous()   Returns the current record's "vrtsynonymous" value
 * @method string              getVrtdescription()  Returns the current record's "vrtdescription" value
 * @method string              getIdGenebank()      Returns the current record's "id_genebank" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()       Returns the current record's "updated_at" value
 * @method integer             getIdUser()          Returns the current record's "id_user" value
 * @method integer             getIdUserUpdate()    Returns the current record's "id_user_update" value
 * @method TbCrop              getTbCrop()          Returns the current record's "TbCrop" value
 * @method Doctrine_Collection getTbTrialinfodata() Returns the current record's "TbTrialinfodata" collection
 * @method TbVariety           setIdVariety()       Sets the current record's "id_variety" value
 * @method TbVariety           setIdCrop()          Sets the current record's "id_crop" value
 * @method TbVariety           setVrtorigin()       Sets the current record's "vrtorigin" value
 * @method TbVariety           setVrtname()         Sets the current record's "vrtname" value
 * @method TbVariety           setVrtsynonymous()   Sets the current record's "vrtsynonymous" value
 * @method TbVariety           setVrtdescription()  Sets the current record's "vrtdescription" value
 * @method TbVariety           setIdGenebank()      Sets the current record's "id_genebank" value
 * @method TbVariety           setCreatedAt()       Sets the current record's "created_at" value
 * @method TbVariety           setUpdatedAt()       Sets the current record's "updated_at" value
 * @method TbVariety           setIdUser()          Sets the current record's "id_user" value
 * @method TbVariety           setIdUserUpdate()    Sets the current record's "id_user_update" value
 * @method TbVariety           setTbCrop()          Sets the current record's "TbCrop" value
 * @method TbVariety           setTbTrialinfodata() Sets the current record's "TbTrialinfodata" collection
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbVariety extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_variety');
        $this->hasColumn('id_variety', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_variety_id_variety',
             'length' => 8,
             ));
        $this->hasColumn('id_crop', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('vrtorigin', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrtname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrtsynonymous', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrtdescription', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_genebank', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbCrop', array(
             'local' => 'id_crop',
             'foreign' => 'id_crop'));

        $this->hasMany('TbTrialinfodata', array(
             'local' => 'id_variety',
             'foreign' => 'id_variety'));
    }
}