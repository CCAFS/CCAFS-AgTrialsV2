<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbAdministrativedivision', 'doctrine');

/**
 * BaseTbAdministrativedivision
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_administrativedivision
 * @property integer $id_administrativedivisiontype
 * @property integer $id_parent
 * @property string $dmdvname
 * @property string $dmdviso
 * @property time $created_at
 * @property time $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property TbAdministrativedivisiontype $TbAdministrativedivisiontype
 * @property Doctrine_Collection $TbAdministrativedivision
 * @property Doctrine_Collection $TbInstitution
 * @property Doctrine_Collection $TbTriallocationadministrativedivision
 * 
 * @method integer                      getIdAdministrativedivision()              Returns the current record's "id_administrativedivision" value
 * @method integer                      getIdAdministrativedivisiontype()          Returns the current record's "id_administrativedivisiontype" value
 * @method integer                      getIdParent()                              Returns the current record's "id_parent" value
 * @method string                       getDmdvname()                              Returns the current record's "dmdvname" value
 * @method string                       getDmdviso()                               Returns the current record's "dmdviso" value
 * @method time                         getCreatedAt()                             Returns the current record's "created_at" value
 * @method time                         getUpdatedAt()                             Returns the current record's "updated_at" value
 * @method integer                      getIdUser()                                Returns the current record's "id_user" value
 * @method integer                      getIdUserUpdate()                          Returns the current record's "id_user_update" value
 * @method TbAdministrativedivisiontype getTbAdministrativedivisiontype()          Returns the current record's "TbAdministrativedivisiontype" value
 * @method Doctrine_Collection          getTbAdministrativedivision()              Returns the current record's "TbAdministrativedivision" collection
 * @method Doctrine_Collection          getTbInstitution()                         Returns the current record's "TbInstitution" collection
 * @method Doctrine_Collection          getTbTriallocationadministrativedivision() Returns the current record's "TbTriallocationadministrativedivision" collection
 * @method TbAdministrativedivision     setIdAdministrativedivision()              Sets the current record's "id_administrativedivision" value
 * @method TbAdministrativedivision     setIdAdministrativedivisiontype()          Sets the current record's "id_administrativedivisiontype" value
 * @method TbAdministrativedivision     setIdParent()                              Sets the current record's "id_parent" value
 * @method TbAdministrativedivision     setDmdvname()                              Sets the current record's "dmdvname" value
 * @method TbAdministrativedivision     setDmdviso()                               Sets the current record's "dmdviso" value
 * @method TbAdministrativedivision     setCreatedAt()                             Sets the current record's "created_at" value
 * @method TbAdministrativedivision     setUpdatedAt()                             Sets the current record's "updated_at" value
 * @method TbAdministrativedivision     setIdUser()                                Sets the current record's "id_user" value
 * @method TbAdministrativedivision     setIdUserUpdate()                          Sets the current record's "id_user_update" value
 * @method TbAdministrativedivision     setTbAdministrativedivisiontype()          Sets the current record's "TbAdministrativedivisiontype" value
 * @method TbAdministrativedivision     setTbAdministrativedivision()              Sets the current record's "TbAdministrativedivision" collection
 * @method TbAdministrativedivision     setTbInstitution()                         Sets the current record's "TbInstitution" collection
 * @method TbAdministrativedivision     setTbTriallocationadministrativedivision() Sets the current record's "TbTriallocationadministrativedivision" collection
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbAdministrativedivision extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_administrativedivision');
        $this->hasColumn('id_administrativedivision', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_administrativedivision_id_administrativedivision',
             'length' => 8,
             ));
        $this->hasColumn('id_administrativedivisiontype', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_parent', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('dmdvname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('dmdviso', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbAdministrativedivisiontype', array(
             'local' => 'id_administrativedivisiontype',
             'foreign' => 'id_administrativedivisiontype'));

        $this->hasMany('TbAdministrativedivision', array(
             'local' => 'id_administrativedivision',
             'foreign' => 'id_parent'));

        $this->hasMany('TbInstitution', array(
             'local' => 'id_administrativedivision',
             'foreign' => 'id_country'));

        $this->hasMany('TbTriallocationadministrativedivision', array(
             'local' => 'id_administrativedivision',
             'foreign' => 'id_administrativedivision'));
    }
}