<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbVariablesmeasured', 'doctrine');

/**
 * BaseTbVariablesmeasured
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_variablesmeasured
 * @property integer $id_crop
 * @property integer $id_traitclass
 * @property string $vrmsname
 * @property string $vrmsshortname
 * @property string $vrmsdefinition
 * @property string $vrmnmethod
 * @property string $vrmsunit
 * @property string $id_ontology
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property TbCrop $TbCrop
 * @property TbTraitclass $TbTraitclass
 * @property Doctrine_Collection $TbTrialinfodata
 * 
 * @method integer             getIdVariablesmeasured()  Returns the current record's "id_variablesmeasured" value
 * @method integer             getIdCrop()               Returns the current record's "id_crop" value
 * @method integer             getIdTraitclass()         Returns the current record's "id_traitclass" value
 * @method string              getVrmsname()             Returns the current record's "vrmsname" value
 * @method string              getVrmsshortname()        Returns the current record's "vrmsshortname" value
 * @method string              getVrmsdefinition()       Returns the current record's "vrmsdefinition" value
 * @method string              getVrmnmethod()           Returns the current record's "vrmnmethod" value
 * @method string              getVrmsunit()             Returns the current record's "vrmsunit" value
 * @method string              getIdOntology()           Returns the current record's "id_ontology" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method integer             getIdUser()               Returns the current record's "id_user" value
 * @method integer             getIdUserUpdate()         Returns the current record's "id_user_update" value
 * @method TbCrop              getTbCrop()               Returns the current record's "TbCrop" value
 * @method TbTraitclass        getTbTraitclass()         Returns the current record's "TbTraitclass" value
 * @method Doctrine_Collection getTbTrialinfodata()      Returns the current record's "TbTrialinfodata" collection
 * @method TbVariablesmeasured setIdVariablesmeasured()  Sets the current record's "id_variablesmeasured" value
 * @method TbVariablesmeasured setIdCrop()               Sets the current record's "id_crop" value
 * @method TbVariablesmeasured setIdTraitclass()         Sets the current record's "id_traitclass" value
 * @method TbVariablesmeasured setVrmsname()             Sets the current record's "vrmsname" value
 * @method TbVariablesmeasured setVrmsshortname()        Sets the current record's "vrmsshortname" value
 * @method TbVariablesmeasured setVrmsdefinition()       Sets the current record's "vrmsdefinition" value
 * @method TbVariablesmeasured setVrmnmethod()           Sets the current record's "vrmnmethod" value
 * @method TbVariablesmeasured setVrmsunit()             Sets the current record's "vrmsunit" value
 * @method TbVariablesmeasured setIdOntology()           Sets the current record's "id_ontology" value
 * @method TbVariablesmeasured setCreatedAt()            Sets the current record's "created_at" value
 * @method TbVariablesmeasured setUpdatedAt()            Sets the current record's "updated_at" value
 * @method TbVariablesmeasured setIdUser()               Sets the current record's "id_user" value
 * @method TbVariablesmeasured setIdUserUpdate()         Sets the current record's "id_user_update" value
 * @method TbVariablesmeasured setTbCrop()               Sets the current record's "TbCrop" value
 * @method TbVariablesmeasured setTbTraitclass()         Sets the current record's "TbTraitclass" value
 * @method TbVariablesmeasured setTbTrialinfodata()      Sets the current record's "TbTrialinfodata" collection
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbVariablesmeasured extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_variablesmeasured');
        $this->hasColumn('id_variablesmeasured', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_variablesmeasured_id_variablesmeasured',
             'length' => 8,
             ));
        $this->hasColumn('id_crop', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_traitclass', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('vrmsname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrmsshortname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrmsdefinition', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrmnmethod', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('vrmsunit', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_ontology', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbCrop', array(
             'local' => 'id_crop',
             'foreign' => 'id_crop'));

        $this->hasOne('TbTraitclass', array(
             'local' => 'id_traitclass',
             'foreign' => 'id_traitclass'));

        $this->hasMany('TbTrialinfodata', array(
             'local' => 'id_variablesmeasured',
             'foreign' => 'id_variablesmeasured'));
    }
}