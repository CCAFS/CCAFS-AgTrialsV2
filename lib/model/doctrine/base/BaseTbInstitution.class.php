<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbInstitution', 'doctrine');

/**
 * BaseTbInstitution
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_institution
 * @property string $insname
 * @property integer $id_country
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property TbAdministrativedivision $TbAdministrativedivision
 * @property Doctrine_Collection $TbContactperson
 * @property Doctrine_Collection $TbProject
 * 
 * @method integer                  getIdInstitution()            Returns the current record's "id_institution" value
 * @method string                   getInsname()                  Returns the current record's "insname" value
 * @method integer                  getIdCountry()                Returns the current record's "id_country" value
 * @method timestamp                getCreatedAt()                Returns the current record's "created_at" value
 * @method timestamp                getUpdatedAt()                Returns the current record's "updated_at" value
 * @method integer                  getIdUser()                   Returns the current record's "id_user" value
 * @method integer                  getIdUserUpdate()             Returns the current record's "id_user_update" value
 * @method TbAdministrativedivision getTbAdministrativedivision() Returns the current record's "TbAdministrativedivision" value
 * @method Doctrine_Collection      getTbContactperson()          Returns the current record's "TbContactperson" collection
 * @method Doctrine_Collection      getTbProject()                Returns the current record's "TbProject" collection
 * @method TbInstitution            setIdInstitution()            Sets the current record's "id_institution" value
 * @method TbInstitution            setInsname()                  Sets the current record's "insname" value
 * @method TbInstitution            setIdCountry()                Sets the current record's "id_country" value
 * @method TbInstitution            setCreatedAt()                Sets the current record's "created_at" value
 * @method TbInstitution            setUpdatedAt()                Sets the current record's "updated_at" value
 * @method TbInstitution            setIdUser()                   Sets the current record's "id_user" value
 * @method TbInstitution            setIdUserUpdate()             Sets the current record's "id_user_update" value
 * @method TbInstitution            setTbAdministrativedivision() Sets the current record's "TbAdministrativedivision" value
 * @method TbInstitution            setTbContactperson()          Sets the current record's "TbContactperson" collection
 * @method TbInstitution            setTbProject()                Sets the current record's "TbProject" collection
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - herlin25@gmail.com - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbInstitution extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_institution');
        $this->hasColumn('id_institution', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_institution_id_institution',
             'length' => 8,
             ));
        $this->hasColumn('insname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_country', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbAdministrativedivision', array(
             'local' => 'id_country',
             'foreign' => 'id_administrativedivision'));

        $this->hasMany('TbContactperson', array(
             'local' => 'id_institution',
             'foreign' => 'id_institution'));

        $this->hasMany('TbProject', array(
             'local' => 'id_institution',
             'foreign' => 'id_projectimplementinginstitutions'));
    }
}