<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbRolecontactperson', 'doctrine');

/**
 * BaseTbRolecontactperson
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_rolecontactperson
 * @property string $rcpname
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property Doctrine_Collection $TbTrial
 * 
 * @method integer             getIdRolecontactperson()  Returns the current record's "id_rolecontactperson" value
 * @method string              getRcpname()              Returns the current record's "rcpname" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method integer             getIdUser()               Returns the current record's "id_user" value
 * @method integer             getIdUserUpdate()         Returns the current record's "id_user_update" value
 * @method Doctrine_Collection getTbTrial()              Returns the current record's "TbTrial" collection
 * @method TbRolecontactperson setIdRolecontactperson()  Sets the current record's "id_rolecontactperson" value
 * @method TbRolecontactperson setRcpname()              Sets the current record's "rcpname" value
 * @method TbRolecontactperson setCreatedAt()            Sets the current record's "created_at" value
 * @method TbRolecontactperson setUpdatedAt()            Sets the current record's "updated_at" value
 * @method TbRolecontactperson setIdUser()               Sets the current record's "id_user" value
 * @method TbRolecontactperson setIdUserUpdate()         Sets the current record's "id_user_update" value
 * @method TbRolecontactperson setTbTrial()              Sets the current record's "TbTrial" collection
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbRolecontactperson extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_rolecontactperson');
        $this->hasColumn('id_rolecontactperson', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_rolecontactperson_id_rolecontactperson',
             'length' => 8,
             ));
        $this->hasColumn('rcpname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TbTrial', array(
             'local' => 'id_rolecontactperson',
             'foreign' => 'id_rolecontactperson'));
    }
}