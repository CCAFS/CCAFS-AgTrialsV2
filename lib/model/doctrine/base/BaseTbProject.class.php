<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TbProject', 'doctrine');

/**
 * BaseTbProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_project
 * @property string $prjname
 * @property integer $id_leadofproject
 * @property integer $id_projectimplementinginstitutions
 * @property date $prjprojectimplementingperiodstartdate
 * @property date $prjprojectimplementingperiodenddate
 * @property integer $id_donor
 * @property string $prjabstract
 * @property string $prjkeywords
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $id_user
 * @property integer $id_user_update
 * @property TbDonor $TbDonor
 * @property TbContactperson $TbContactperson
 * @property TbInstitution $TbInstitution
 * @property Doctrine_Collection $TbProjectdocument
 * @property Doctrine_Collection $TbTrial
 * 
 * @method integer             getIdProject()                             Returns the current record's "id_project" value
 * @method string              getPrjname()                               Returns the current record's "prjname" value
 * @method integer             getIdLeadofproject()                       Returns the current record's "id_leadofproject" value
 * @method integer             getIdProjectimplementinginstitutions()     Returns the current record's "id_projectimplementinginstitutions" value
 * @method date                getPrjprojectimplementingperiodstartdate() Returns the current record's "prjprojectimplementingperiodstartdate" value
 * @method date                getPrjprojectimplementingperiodenddate()   Returns the current record's "prjprojectimplementingperiodenddate" value
 * @method integer             getIdDonor()                               Returns the current record's "id_donor" value
 * @method string              getPrjabstract()                           Returns the current record's "prjabstract" value
 * @method string              getPrjkeywords()                           Returns the current record's "prjkeywords" value
 * @method timestamp           getCreatedAt()                             Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()                             Returns the current record's "updated_at" value
 * @method integer             getIdUser()                                Returns the current record's "id_user" value
 * @method integer             getIdUserUpdate()                          Returns the current record's "id_user_update" value
 * @method TbDonor             getTbDonor()                               Returns the current record's "TbDonor" value
 * @method TbContactperson     getTbContactperson()                       Returns the current record's "TbContactperson" value
 * @method TbInstitution       getTbInstitution()                         Returns the current record's "TbInstitution" value
 * @method Doctrine_Collection getTbProjectdocument()                     Returns the current record's "TbProjectdocument" collection
 * @method Doctrine_Collection getTbTrial()                               Returns the current record's "TbTrial" collection
 * @method TbProject           setIdProject()                             Sets the current record's "id_project" value
 * @method TbProject           setPrjname()                               Sets the current record's "prjname" value
 * @method TbProject           setIdLeadofproject()                       Sets the current record's "id_leadofproject" value
 * @method TbProject           setIdProjectimplementinginstitutions()     Sets the current record's "id_projectimplementinginstitutions" value
 * @method TbProject           setPrjprojectimplementingperiodstartdate() Sets the current record's "prjprojectimplementingperiodstartdate" value
 * @method TbProject           setPrjprojectimplementingperiodenddate()   Sets the current record's "prjprojectimplementingperiodenddate" value
 * @method TbProject           setIdDonor()                               Sets the current record's "id_donor" value
 * @method TbProject           setPrjabstract()                           Sets the current record's "prjabstract" value
 * @method TbProject           setPrjkeywords()                           Sets the current record's "prjkeywords" value
 * @method TbProject           setCreatedAt()                             Sets the current record's "created_at" value
 * @method TbProject           setUpdatedAt()                             Sets the current record's "updated_at" value
 * @method TbProject           setIdUser()                                Sets the current record's "id_user" value
 * @method TbProject           setIdUserUpdate()                          Sets the current record's "id_user_update" value
 * @method TbProject           setTbDonor()                               Sets the current record's "TbDonor" value
 * @method TbProject           setTbContactperson()                       Sets the current record's "TbContactperson" value
 * @method TbProject           setTbInstitution()                         Sets the current record's "TbInstitution" value
 * @method TbProject           setTbProjectdocument()                     Sets the current record's "TbProjectdocument" collection
 * @method TbProject           setTbTrial()                               Sets the current record's "TbTrial" collection
 * 
 * @package    AgTrials
 * @subpackage model
 * @author     Herlin R. Espinosa G. - CIAT-CCAFS-DAPA
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTbProject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tb_project');
        $this->hasColumn('id_project', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'tb_project_id_project',
             'length' => 8,
             ));
        $this->hasColumn('prjname', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_leadofproject', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_projectimplementinginstitutions', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('prjprojectimplementingperiodstartdate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('prjprojectimplementingperiodenddate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_donor', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('prjabstract', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('prjkeywords', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_user', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
        $this->hasColumn('id_user_update', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TbDonor', array(
             'local' => 'id_donor',
             'foreign' => 'id_donor'));

        $this->hasOne('TbContactperson', array(
             'local' => 'id_leadofproject',
             'foreign' => 'id_contactperson'));

        $this->hasOne('TbInstitution', array(
             'local' => 'id_projectimplementinginstitutions',
             'foreign' => 'id_institution'));

        $this->hasMany('TbProjectdocument', array(
             'local' => 'id_project',
             'foreign' => 'id_project'));

        $this->hasMany('TbTrial', array(
             'local' => 'id_project',
             'foreign' => 'id_project'));
    }
}